{
  "title": "Foret Design System",
  "pages": {
    "home": "Home",
    "getStarted": "Get Started",
    "designPrinciple": "Design Principle",
    "color": "Color",
    "components": "Components"
  },
  "drawer": {
    "preferredLanguageTitle": "Select your preferred language"
  },
  "404": {
    "title": "Page not found!",
    "description": "Sorry, but the page you were looking for could not be found."
  },
  "home": {
    "intro": {
      "description1": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris congue augue quis auctor tempus. Donec augue sem, hendrerit et risus vitae, vehicula posuere mauris. Vestibulum volutpat tellus quis augue molestie aliquam. In in mauris ipsum. Cras facilisis sem eget dui porta suscipit. Maecenas at mauris convallis sem mollis cursus eu eu neque.",
      "description2": "Sed gravida elit in tincidunt commodo. Fusce malesuada velit at suscipit cursus. Donec congue imperdiet dignissim. Aliquam lacinia tortor non maximus bibendum. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus faucibus ex lectus, ultricies mollis metus placerat in.",
      "description3": "Nulla lacinia ac ipsum nec rutrum. Phasellus maximus nunc elit, vehicula tempus ligula faucibus a. Praesent sed facilisis nisl, id egestas massa. Etiam rhoncus, nibh eget tempus rhoncus, arcu ante congue purus, non posuere urna ante in mauris. Ut porttitor iaculis ex, at euismod neque. Quisque pretium odio vel magna aliquam imperdiet."
    }
  },
  "getStarted": {
    "hero": {
      "title": "Get Started",
      "subtitle1": "The Foret Design System is served both React and Angular.",
      "subtitle2": "Head over to Frameworks for all the information you need to get started."
    },
    "content": {
      "installation": {
        "title": "Installation",
        "description1": "Foret components are served as an ",
        "description2": ". Add them to your project by running:",
        "installViaNpm": "Using npm:",
        "installViaYarn": "If you prefer yarn:",
        "installEmotionCore": "Don’t forget to install the @emotion/core ^10.0.0 also."
      },
      "contributing": {
        "title": "Contributing",
        "description1": "We want to provide only components of the highest quality. We can’t do that without your feedback. If you have any suggestions or any issues about what we can do to improve components, please create an issue or submit a pull request at ",
        "description2": " "
      }
    }
  },
  "color": {
    "hero": {
      "title": "Color",
      "subtitle1": "Color is a fundamental component of the design system and represents brand."
    }
  },
  "designPrinciple": {
    "hero": {
      "title": "Design Principle",
      "subtitle1": "Design principles define and convey the key features of the design system.",
      "subtitle2": "The Foret Design System is built on the following design principles."
    },
    "content": {
      "designPrinciple": {
        "principle1Title": "Simple",
        "principle1Description": "Absolutely necessary and minimal design.",
        "principle2Title": "Comfortable",
        "principle2Description": "Not only should it look comfortable in appearance, it should also feel comfortable in usability.",
        "principle3Title": "Natural",
        "principle3Description": "It must not splash. The role of each design element should be taken for granted and naturally."
      }
    }
  },
  "components": {
    "hero": {
      "title": "Components",
      "subtitle1": "Components are the building blocks of the design system.",
      "subtitle2": "And it is designed to solve a specific UI problem."
    },
    "shared": {
      "overview": "Overview",
      "imports": "Imports",
      "liveDemo": "Live Demo",
      "props": "Props",
      "properties": "Properties"
    },
    "button": {
      "title": "Button",
      "description": "A button is an interactive element that results in an action described on it",
      "overview": {
        "description": "1. Uppercase"
      },
      "propsDescription": {
        "button": {
          "disabled": "If set to true, the button would be disabled.",
          "children": "The content of the button."
        }
      }
    },
    "checkbox": {
      "title": "Checkbox",
      "description": "Checkbox is Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris congue augue quis auctor tempus. Donec augue sem, hendrerit et risus vitae, vehicula posuere mauris. Vestibulum volutpat tellus quis augue molestie aliquam. In in mauris ipsum. Cras facilisis sem eget dui porta suscipit. Maecenas at mauris convallis sem mollis cursus eu eu neque.",
      "overview": {
        "description": "Checkbox description here"
      },
      "propsDescription": {
        "checkboxGroup": {
          "legendText": "The label of checkbox group.",
          "disabled": "If set to true, every checkbox in checkbox group would be disabled.",
          "onChange": "Callback function to invoke when the user clicks on the checkbox."
        },
        "checkbox": {
          "id": "The id of a checkbox. It's used to identifies the checkbox.",
          "labelText": "The label of a checkbox.",
          "checked": "If set to true, the checkbox would be checked."
        }
      },
      "propertiesDescription": {
        "checkboxGroup": {
          "legendText": "The label of a checkbox group.",
          "disabled": "If set to true, every checkbox in checkbox group would be disabled.",
          "changeCheckbox": "Callback function to invoke when the user clicks on the checkbox."
        },
        "checkbox": {
          "id": "The id of a checkbox. It's used to identifies the checkbox.",
          "labelText": "The label of a checkbox.",
          "checked": "If set to true, the checkbox would be checked."
        }
      }
    },
    "radioButton": {
      "title": "Radio Button",
      "description": "Radio Button is Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris congue augue quis auctor tempus. Donec augue sem, hendrerit et risus vitae, vehicula posuere mauris. Vestibulum volutpat tellus quis augue molestie aliquam. In in mauris ipsum. Cras facilisis sem eget dui porta suscipit. Maecenas at mauris convallis sem mollis cursus eu eu neque.",
      "overview": {
        "description": "Radio Button description here"
      },
      "propsDescription": {
        "radioButtonGroup": {
          "legendText": "The label of a radio button group.",
          "checkedValue": "If it matches the value property of the radio button, that radio button will be set up as checked.",
          "disabled": "If set to true, every radio button in radio button group would be disabled.",
          "onChange": "Callback function to invoke when the user clicks on the radio button."
        },
        "radioButton": {
          "id": "The id of a radio button. It's used to identifies the radio button.",
          "labelText": "The label of a radio button.",
          "value": "The value of a radio button."
        }
      },
      "propertiesDescription": {
        "radioButtonGroup": {
          "legendText": "The label of a radio button group.",
          "checkedValue": "If it matches the value property of the radio button, that radio button will be set up as checked.",
          "disabled": "If set to true, every radio button in radio button group would be disabled.",
          "changeRadioButton": "Callback function to invoke when the user clicks on the radio button."
        },
        "radioButton": {
          "id": "The id of a radio button. It's used to identifies the radio button.",
          "labelText": "The label of a radio button.",
          "value": "The value of a radio button."
        }
      }
    },
    "select": {
      "title": "Select",
      "description": "Select is Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris congue augue quis auctor tempus. Donec augue sem, hendrerit et risus vitae, vehicula posuere mauris. Vestibulum volutpat tellus quis augue molestie aliquam. In in mauris ipsum. Cras facilisis sem eget dui porta suscipit. Maecenas at mauris convallis sem mollis cursus eu eu neque.",
      "overview": {
        "description": "Select description here"
      },
      "propsDescription": {
        "select": {
          "id": "The id of a select.",
          "legendText": "The label of a select.",
          "selectedValue": "If it matches the value property of the select, that select will be selected.",
          "placeholder": "The placeholder of a select.",
          "disabled": "If set to true, the select would be disabled.",
          "onChange": "Callback function to invoke when the user selects an option."
        },
        "selectItemGroup": {
          "labelText": "The label of a select item group.",
          "disabled": "If set to true, the select item group would be disabled."
        },
        "selectItem": {
          "value": "The value of a select item.",
          "labelText": "The label of a select item.",
          "disabled": "If set to true, the select item would be disabled."
        }
      },
      "propertiesDescription": {
        "select": {
          "id": "The id of a select.",
          "legendText": "The label of a select.",
          "placeholder": "The placeholder of a select.",
          "disabled": "If set to true, the select would be disabled.",
          "changeSelect": "Callback function to invoke when the user selects an option."
        }
      }
    },
    "tab": {
      "title": "Tab",
      "description": "Separates content into groups within a single context.",
      "overview": {
        "description": "Tab description here"
      },
      "propsDescription": {
        "tabGroup": {
          "selectedValue": "If it matches the value property of the tab, that tab will be selected.",
          "onChange": "Callback function to invoke when the user clicks on the tab."
        },
        "tab": {
          "id": "The id of tab. It's used to identifies the tab.",
          "labelText": "The label of a tab.",
          "value": "The value of a tab."
        }
      },
      "propertiesDescription": {
        "tabGroup": {
          "selectedValue": "If it matches the value property of the tab, that tab will be selected.",
          "changeTab": "Callback function to invoke when the user clicks on the tab."
        },
        "tab": {
          "id": "The id of tab. It's used to identifies the tab.",
          "labelText": "The label of a tab.",
          "value": "The value of a tab."
        }
      }
    },
    "toggle": {
      "title": "Toggle",
      "description": "A toggle is used to quickly switch between two possible states. They are commonly used for “on/off” switches.",
      "overview": {
        "description": "Toggle description here"
      },
      "propsDescription": {
        "toggle": {
          "id": "The id of toggle. It's used to identifies the toggle.",
          "disabled": "If set to true, the toggle would be disabled.",
          "checked": "If set to true, the toggle would be checked.",
          "onToggle": "Callback function to invoke when the user clicks on the toggle."
        }
      },
      "propertiesDescription": {
        "toggle": {
          "id": "The id of toggle. It's used to identifies the toggle.",
          "disabled": "If set to true, the toggle would be disabled.",
          "checked": "If set to true, the toggle would be checked.",
          "toggle": "Callback function to invoke when the user clicks on the toggle."
        }
      }
    }
  }
}
